¿Qué es React y cómo funciona?
React es uno de los frameworks web de JavaScript más comentados en años. Junto con Angular, y más recientemente Vue, React es una herramienta que ha tenido un gran impacto en la forma en que construimos aplicaciones web. En su página lo definen de una manera rápida y sencilla:

Una biblioteca de JavaScript para construir interfaces de usuario.

React generalmente se considera la capa de vista en una aplicación. Es posible que hayamos utilizado bibliotecas como Handlebars o jQuery en el pasado. Al igual que jQuery, React manipula los elementos de la interfaz de usuario que se insertan en la página, los componentes de React cambian lo que el usuario ve.

Creación de la app con React
npx create-react-app blog_platzi

npm run start

Stateful vs Stateless
Los componentes no funcionales no manejan estado, solo manejan información y funciones.

Los componentes de clases manejan un estado interno, información y funciones, no hace falta definir las funciones con const simplemente con el nombre de la función ya lo detecta.

Ciclo de vida de React
Tenemos 4 fases por los que un componente pasa:

Initialization: Declaramos nuestro estado o propiedades
Mounting: Todo componente debe tener render. Es obligatorio.
Updation
Unmounting: Solo hay una función en caso de que queramos hacer algo cuando se destruya un componente

npm install axios

Manejando promesas
Una Promesa es un proxy para un valor no necesariamente conocido en el momento que es creada la promesa.

Las promesas tienen tres estados:

pending
fullfilled
rejected
Las promesas se invocan de la siguiente forma:

new  Promise( ( resolve, reject ) => {
// --- llamado asíncrono 
        if( todoOK ) { 
        // -- se ejecutó el llamado exitosamente resolve() }
        else { 
        // -- hubo un error en el llamado reject() 
        } 
} )

React Router DOM
npm install react-router-dom